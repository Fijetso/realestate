# Enabling H2 Console
spring.h2.console.enabled=true

#Debug mode
#logging.level.root=WARN
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR
logging.level.org.springframework=DEBUG
#Security
spring.security.user.name=username
spring.security.user.password=12345
#Cloudiary
cloudinary.cloud_name=fijetso3671
cloudinary.api_key=542223151915237
cloudinary.api_secret=gOccqXxo4nFL5uGTecW7jGs9oR0
cloudinary.folder=RealEstate
#Oauth2
spring.security.oauth2.client.registration.google.clientId= 248221268767-rfu5uk1svdp7q9i4i0dh8beav4a6jm8d.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret= LOIJlh5EvEWNIGiL7nMrHzML
#spring.security.oauth2.client.registration.google.accessTokenUri= https://oauth2.googleapis.com/token
#sprint.security.oauth2.client.registration.google.redirectUriTemplate= "{baseUrl}/oauth2/callback/{registrationId}"
#spring.security.oauth2.client.registration.google.userAuthorizationUri= https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=profile, email


#spring.security.oauth2.client.registration.facebook.clientId= 121189305185277
#sprint.security.oauth2.client.registration.facebook.clientSecret= 42ffe5aa7379e8326387e0fe16f34132
#sprint.security.oauth2.client.registration.facebook.redirectUriTemplate= "{baseUrl}/oauth2/callback/{registrationId}"
#sprint.security.oauth2.client.registration.facebook.scope=public_profile, email
#sprint.security.oauth2.client.provider.facebook.authorizationUri= https://www.facebook.com/v3.0/dialog/oauth
#sprint.security.oauth2.client.provider.facebook.tokenUri= https://graph.facebook.com/v3.0/oauth/access_token
#sprint.security.oauth2.client.provider.facebook.userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app.oauth2.authorizedRedirectUris=http://localhost:8080/oauth2/redirect
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    